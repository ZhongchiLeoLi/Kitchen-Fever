#BlueJ class context
comment0.target=MyWorld
comment0.text=\r\n\ Kitchen\ fever\ is\ a\ simulation\ set\ in\ the\ kitchen\ of\ a\ busy\ restaurant.\ \r\n\ Inspired\ by\ the\ game\ "Overcooked",\ the\ simulation\ shows\ the\ busy\ work\ \r\n\ lives\ of\ chefs\ as\ they\ cut,\ cook\ and\ plate\ orders.\ The\ two\ main\ parent\ \r\n\ classes\ are\ the\ Ingredients\ and\ Chefs\ classes.\ However,\ there\ are\ many\ \r\n\ other\ classes\ used\ in\ the\ simulation.\ These\ include,\ the\ Order,\ Timer,\r\n\ ProgressBar\ and\ Targets\ classes.\ \r\n\ <p>\r\n\ Having\ two\ different\ types\ of\ meat,\ vegetable\ and\ grain\ ingredients,\ \r\n\ there\ are\ a\ total\ of\ eight\ dishes\ the\ the\ chefs\ can\ make.\r\n\ <p>\r\n\ The\ World\ class\ is\ primarily\ responsible\ for\ creating\ objects,\r\n\ generating\ orders\ and\ removing\ the\ order\ displays\ when\ a\ dish\ \r\n\ has\ been\ complete.\ The\ World\ also\ helps\ keep\ track\ of\ time\ as\ it\r\n\ runs\ at\ 60\ frames\ per\ second\r\n\ <p>\r\n\ In\ the\ parent\ class\ Chefs,\ the\ child\ classes\ are\ broken\ up\ into\ meat,\r\n\ vegetable,\ grain,\ plating\ and\ serving\ chefs.\ The\ meat\ and\ vegetable\ \r\n\ chefs\ are\ responsible\ for\ picking\ up,\ cutting\ and\ cooking\ ingredients.\r\n\ The\ grain\ chef\ is\ responsible\ for\ picking\ up\ grain\ ingredients\ and\ placing\r\n\ plates\ on\ the\ serving\ table.\ The\ Plating\ chef\ checks\ when\ the\ food\ is\r\n\ cooked\ and\ places\ the\ food\ on\ the\ plates.\ Finally,\ the\ serving\ chef\ \r\n\ takes\ the\ plates\ to\ serve\ to\ the\ customers.\ \r\n\ <p>\r\n\ The\ Target\ class\ is\ a\ parent\ class\ that\ helps\ with\ the\ movement\ of\ the\ chefs.\ \r\n\ Each\ subclass\ represents\ a\ station.\ Each\ subclass\ of\ chef\ will\ only\ go\ to\ \r\n\ their\ designated\ stations.\ For\ instance,\ the\ meat\ chef\ will\ only\ move\ towards\r\n\ the\ FoodBox,\ CuttingBoard,\ FryingPan\ and\ Home\ Targets.\r\n\ <p>\r\n\ The\ Order\ class\ is\ primarily\ used\ to\ display\ the\ orders\ visually\ for\ \r\n\ the\ viewer.\ However\ it\ also\ creates\ the\ ProgressBar\ and\ tells\ the\ \r\n\ chefs\ what\ ingredients\ they\ need\ to\ cook.\r\n\ <p>\r\n\ The\ Timer\ and\ Progressbar\ act\ as\ an\ visual\ indication\ for\ when\ a\ \r\n\ process\ has\ been\ completed.\r\n\ <p>\r\n\ An\ interesting\ thing\ to\ look\ out\ for\ would\ be\ how\ the\ animations\ are\ done\r\n\ For\ the\ animations,\ a\ 2D\ array\ is\ used.\ The\ array\ stores\ the\ type\ of\ \r\n\ animation\ needed\ (i.e.\ move\ down)\ and\ the\ images\ associated\ with\ that\ \r\n\ animation.\ This\ cuts\ back\ on\ a\ lot\ of\ code\ because\ everything\ is\ \r\n\ stored\ in\ one\ easily\ accessible\ array.\r\n\ <p>\r\n\ Another\ interesting\ thing\ to\ look\ out\ for\ would\ be\ the\ images\ used.\r\n\ Almost\ all\ of\ background\ was\ hand\ drawn\ to\ fit\ the\ classic\ look\r\n\ of\ the\ overcooked\ game.\ In\ addition,\ all\ of\ the\ food\ images\ were\ \r\n\ created\ using\ editing\ software.\ The\ most\ time\ consuming\ task\ was\r\n\ colouring\ the\ images,\ especially\ the\ bricks\ and\ tiles\ as\ each\ individual\r\n\ object\ has\ its\ unique\ look.\ \r\n\ <p>\r\n\ If\ you\ don't\ want\ to\ wait\ for\ food\ to\ burn,\ press\ q\ and\ watch\ the\ chefs\ panic\!\r\n\ <p>\r\n\ One\ of\ the\ hardest\ tasks\ for\ this\ simulation\ was\ figuring\ out\ how\ the\ \r\n\ chefs\ were\ going\ to\ move.\ Typically,\ one\ would\ just\ rotate\ the\ character\ to\r\n\ move\ towards\ the\ target.\ However,\ since\ the\ simulation\ was\ not\ birds\ eye\ view,\ \r\n\ we\ had\ to\ go\ about\ it\ a\ completely\ different\ way\ through\ targets.\ However,\ an\ added\r\n\ benefit\ of\ doing\ it\ this\ way\ is\ that\ we\ actually\ have\ walking\ animations\ for\ the\ chef\r\n\ for\ all\ directions.\ In\ addition,\ I\ think\ this\ three\ dimensional\ view\ is\ one\ of\ the\ \r\n\ main\ things\ that\ help\ our\ simulation\ stand\ out\ from\ the\ others.\r\n\ <p>\r\n\ Sound\ effects\ were\ taken\ from\ the\ youtube\ channel\ "SOUND\ and\ IMAGE\ FX"\r\n\ under\ the\ playlist\ "Cooking\ Sound\ Effect".\ Some\ food\ images\ were\ taken\r\n\ from\ the\ game\ "Minecraft".\ Background\ music\ is\ from\ the\ game\ "Overcooked".\r\n\ Animation\ sprites\ were\ created\ using\ the\ character\ sprite\ generator\ at\r\n\ "http\://gaurav.munjal.us/Universal-LPC-Spritesheet-Character-Generator/".\r\n\ Object\ list\ and\ nanotime\ code\ given\ by\ Mr.Cohen.\r\n\r\n\ \r\n\ @author\ Daniel\ Tan,\ Alexander\ Yee\ and\ Zhongchi\ Li\r\n\ @version\ October\ 2018\r\n
comment1.params=
comment1.target=MyWorld()
comment10.params=
comment10.target=int\ getFrames()
comment10.text=\r\n\ Get\ the\ frame\ that\ the\ world\ is\ currently\ at\r\n\ \r\n\ @return\ int\ the\ frame\ the\ world\ is\ at\r\n
comment2.params=
comment2.target=void\ act()
comment3.params=
comment3.target=void\ checkButtons()
comment3.text=\r\n\ Check\ which\ of\ the\ 2\ buttons\ of\ each\ column\ is\ clicked\ \r\n
comment4.params=ingredientType\ button1\ button2
comment4.target=void\ checkButton(java.lang.String,\ Buttons,\ Buttons)
comment4.text=\r\n\ Assign\ the\ buttons\ clicked\ their\ corresponding\ ingredients\ to\ their\ order\r\n
comment5.params=instant\ probability
comment5.target=void\ generateOrder(boolean,\ int)
comment6.params=
comment6.target=void\ finishedOrder()
comment6.text=\r\n\ Updates\ the\ order\ display\ by\ removing\ the\ first\ order\ and\ progressbar.\r\n\ Shifts\ all\ displays\ one\ position\ to\ the\ left\r\n
comment7.params=num
comment7.target=Order\ getOrders(int)
comment7.text=\r\n\ Gets\ the\ Order\ objetc\ \r\n\ \r\n\ @param\ num\ position\ of\ the\ order\ relative\ to\ the\ display\r\n\ @return\ Order\ returns\ the\ Order\ object\r\n
comment8.params=
comment8.target=void\ generateTargets()
comment9.params=
comment9.target=void\ generateChefs()
numComments=11
